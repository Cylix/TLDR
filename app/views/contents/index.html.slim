h1
  - if @source
    = I18n.t("views.contents.index.contents_for_source", source_name: @source.name)
    - content_for :page_info, raw({ page_type: :contents_of_source, extra: @source.id }.to_json)
  - elsif @status
    = @status.capitalize
    - content_for :page_info, raw({ page_type: :contents_of_type, extra: @status.downcase }.to_json)
  - elsif @category
    = I18n.t("views.contents.index.contents_for_category", category_name: @category.name)
    - content_for :page_info, raw({ page_type: :contents_of_category, extra: @category.id }.to_json)
  - else
    = I18n.t("views.contents.index.all_contents")
    - content_for :page_info, raw({ page_type: :contents, extra: :all }.to_json)

- if @contents.any?
  //! pinned post first
  - @contents.each do |content|
    .card class=(class_for_content_card content)
      .card-block
        .row-no-margin
          h4.card-title = content.title
          .content-actions.ml-auto
            //! pin
            = link_to content_path(content, content: {is_pinned: !content.is_pinned}), remote: true, method: :put, class: 'pin_btn' do
              i.fa.fa-fw.fa-lg.fa-thumb-tack class=('text-info' if content.is_pinned?)
            //! done
            = link_to content_path(content, content: { status: (content.is_done? ? :inbox : :done) }), remote: true, method: :put, class: 'done_btn' do
              i.fa.fa-fw.fa-lg.fa-check class=('text-success' if content.is_done?)
            //! snooze
            = link_to '#', class: 'snooze_btn' do
              i.fa.fa-fw.fa-lg.fa-clock-o class=('text-success' if content.is_snoozed?)
            //! categorize
            span.dropdown
              = link_to '#', class: 'dropdown-toggle', id: "dropdown_categorize_#{content.id}", 'data-toggle' => "dropdown", 'aria-haspopup' => "true", 'aria-expanded' => "false" do
                i.fa.fa-fw.fa-lg.fa-tag class=('text-success' if content.is_categorized?)
                span.category_name
                  - if content.is_categorized?
                    = content.category.name
              .dropdown-menu.dropdown-menu-right aria-labelledby="dropdown_categorize_#{content.id}"
                h6.dropdown-header = I18n.t('views.contents.index.categorize')
                .categories_dropdown
                  - if current_user.categories.any?
                    - current_user.categories.all.each do |category|
                      = link_to category.name, content_path(content, content: { category_id: category.id }), remote: true, method: :put, class: 'dropdown-item categorize_btn'
                  - else
                    span.dropdown-item.empty_category = I18n.t('views.contents.index.no_category')
            //! trash
            = link_to content_path(content, content: { status: (content.is_trashed? ? :inbox : :trashed) }), remote: true, method: :put, class: 'trashed_btn' do
              i.fa.fa-fw.fa-lg.fa-trash  class=('text-danger' if content.is_trashed?)
        h6.card-subtitle.mb-2.text-muted
          i.fa.fa-fw class=(iconable_source_type content.source.type)
          = link_to content.source.name, source_contents_path(content.source), class: 'text-muted'
        h6.card-subtitle.mb-2.text-muted.category_link
          - if content.is_categorized?
            i.fa.fa-fw.fa-tag
            = link_to content.category.name, category_contents_path(content.category), class: 'text-muted'
        p.card-text = content.description.blank? ? I18n.t("views.contents.index.no_description") : trunk_words(sanitize(content.description, tags:[]), 150)
        p.card-text = link_to I18n.t("views.contents.index.view_content"), content.url, target: '_blank'
        p.card-text
          - if content.published_at
            small.text-muted = I18n.t('views.contents.index.pusblished_and_imported_at', published_at: time_ago_in_words(content.published_at), synchronized_at: time_ago_in_words(content.synchronized_at))
          - else
            small.text-muted = I18n.t('views.contents.index.imported_at', synchronized_at: time_ago_in_words(content.synchronized_at))

- else
  = I18n.t("views.contents.index.no_content")
